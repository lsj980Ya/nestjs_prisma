name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # 确保 Tag 是在 main 分支上打的

jobs:
  build-docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Extract version
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      if: startsWith(github.ref, 'refs/tags/v')

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_HUB_USERNAME }}/server_node_project:latest
          ${{ secrets.DOCKER_HUB_USERNAME }}/server_node_project:${{ steps.version.outputs.VERSION || 'dev' }}
        cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/server_node_project:buildcache
        cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/server_node_project:buildcache,mode=max

  deploy-prod:
    needs: build-docker
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - uses: actions/checkout@v4

    - name: Copy configuration files and folders
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.DEPLOY_SSH_KEY }}
        source: "docker-compose.yml,.env.production,config/**"
        target: "/home/${{ secrets.DEPLOY_USER }}/server_node_project"
        strip_components: 0

    - name: Deploy to production server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.DEPLOY_SSH_KEY }}
        script: |
          cd /home/${{ secrets.DEPLOY_USER }}/server_node_project
          sudo chmod +x deploy.sh
          sudo ./deploy.sh